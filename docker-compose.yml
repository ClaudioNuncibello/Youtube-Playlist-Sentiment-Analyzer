version: '3.8'
services:
    zookeeper:
        image: kafka:tap
        container_name: kafkaZK
        environment:
            - KAFKA_ACTION=start-zk
        networks: 
            tap:
                ipv4_address: 10.0.100.22
    kafkaserver:
        image: kafka:tap
        container_name: kafkaServer
        environment:
            - KAFKA_ACTION=start-kafka
            #- KAFKA_HEAP_OPTS=-Xmx256M
        ports:
            - 9092:9092
        networks: 
            tap:
                ipv4_address: 10.0.100.23
        depends_on:
            - zookeeper
    kafkaTopic:
        image: kafka:tap
        container_name: kafkaTopic
        environment:
            - KAFKA_ACTION=create-topic
            - KAFKA_PARTITION=1
            - KAFKA_TOPIC=comments

        networks: 
            tap:
        depends_on:
            - zookeeper
            - kafkaserver
    newKafkaTopic:
        image: kafka:tap
        container_name: newKafkaTopic
        environment:
            - KAFKA_ACTION=create-topic
            - KAFKA_PARTITION=1
            - KAFKA_TOPIC=videos

        networks: 
            tap:
        depends_on:
            - zookeeper
            - kafkaserver

    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        container_name: kafkaWebUI
        environment:
            - KAFKA_CLUSTERS_0_NAME=local
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafkaServer:9092
        ports: 
            - 8080:8080
        networks: 
            - tap
        depends_on:
            - kafkaserver
    logstash:
        image: logstash:tap
        networks: 
            - tap
        environment:
            XPACK_MONITORING_ENABLED: "false"
        ports:
            - 9090:9090
        volumes:
            - ./youtap.conf:/usr/share/logstash/pipeline/logstash.conf
        depends_on:
            kafkaTopic:
                condition: service_completed_successfully
    kafkaConsumer1:
        image: kafka:tap
        container_name: kafkaConsumer1
        environment:
            - KAFKA_ACTION=consumer
            - KAFKA_TOPIC=comments
            - KAFKA_GROUP_ID=comments
        networks: 
            tap:
        depends_on:
            kafkaTopic:
                condition: service_completed_successfully
    kafkaConsumer2:
        image: kafka:tap
        container_name: kafkaConsumer2
        environment:
            - KAFKA_ACTION=consumer
            - KAFKA_TOPIC=videos
            - KAFKA_GROUP_ID=videos
        networks: 
            tap:
        depends_on:
            kafkaTopic:
                condition: service_completed_successfully
    spark:
        image: spark:tap
        volumes:
              - ./spark/spark.py:/home/spark.py
        networks:
            - tap
        container_name: spark
     # # depends_on:
     # #   - elasticsearch
       # restart: on-failure
   
networks:
    tap:
        name: tap
        driver: bridge
        ipam:
            config:
                - subnet: 10.0.100.1/24

