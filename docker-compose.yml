version: '3.8'
services:
    zookeeper:
        image: kafka:tap
        container_name: kafkaZK
        environment:
            - KAFKA_ACTION=start-zk
        networks: 
            tap:
                ipv4_address: 10.0.100.22


    kafkaserver:
        image: kafka:tap
        container_name: kafkaServer
        environment:
            - KAFKA_ACTION=start-kafka
            #- KAFKA_HEAP_OPTS=-Xmx256M
        ports:
            - 9092:9092
        networks: 
            tap:
                ipv4_address: 10.0.100.23
        depends_on:
            - zookeeper



    kafkaTopic:
        image: kafka:tap
        container_name: kafkaTopic
        environment:
            - KAFKA_ACTION=create-topic
            - KAFKA_PARTITION=1
            - KAFKA_TOPIC=comments
        networks: 
            tap:
        depends_on:
            - zookeeper
            - kafkaserver



    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        container_name: kafkaWebUI
        environment:
            - KAFKA_CLUSTERS_0_NAME=local
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafkaServer:9092
        ports: 
            - 8080:8080
        networks: 
            - tap
        depends_on:
            - kafkaserver




    logstash:
        image: logstash:tap
        networks: 
            - tap
        environment:
            XPACK_MONITORING_ENABLED: "false"
        ports:
            - 9090:9090
        volumes:
            - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
        depends_on:
            kafkaTopic:
                condition: service_completed_successfully




    kafkaConsumer1:
        image: kafka:tap
        container_name: kafkaConsumer1
        environment:
            - KAFKA_ACTION=consumer
            - KAFKA_TOPIC=comments
            - KAFKA_GROUP_ID=comments
        networks: 
            tap:
        depends_on:
            kafkaTopic:
                condition: service_completed_successfully

                

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1-arm64
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - "xpack.security.enabled=false"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ./esdata:/usr/share/elasticsearch/data
        ports:
            - 9200:9200
        networks:
            - tap

    spark:
        image: spark:tap
        volumes:
              - ./spark/spark.py:/home/spark.py
        networks:
            - tap
        container_name: spark
        depends_on:
            - elasticsearch
        #restart: on-failure

    # grafana:
    #     image: grafana/grafana:10.2.4
    #     container_name: grafana
    #     ports:
    #         - 3000:3000

    kibana:
        image: docker.elastic.co/kibana/kibana:8.7.1-arm64
        container_name: kibana
        ports:
            - 5601:5601
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        networks:
            - tap
        depends_on:
            - elasticsearch
   


networks:
    tap:
        name: tap
        driver: bridge
        ipam:
            config:
                - subnet: 10.0.100.1/24

